button data-controller="food" data-action="click->food#new" class="block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:text-white" type="button" Create
/ <!-- Main modal -->
div id="food-popup" tabindex="-1" class="hidden overflow-y-auto overflow-x-hidden fixed top-0 right-0 left-0 z-50 justify-center items-center w-full md:inset-0 h-[calc(100%-1rem)] max-h-full"
  div class="relative p-4 w-full max-w-xl max-h-full"
    / <!-- Modal content -->
    div class="relative bg-white rounded-lg shadow dark:bg-gray-700"
      / <!-- Modal header -->
      div class="flex items-center justify-between p-4 md:p-5 border-b rounded-t dark:border-gray-600"
        h3 class="text-xl font-semibold text-gray-900 dark:text-white" Create Food
        button type="button" data-controller="food" data-action="click->food#cancle" class="end-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
          svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14"
            path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
          span class="sr-only" Close
      / <!-- Modal body -->
      div class="p-4 md:p-5"
        = form_with(model: food, local: true, data: {turbo: false}, html: {class: "mx-auto mt-16 max-w-xl sm:mt-10 flex flex-wrap gap-x-1"}) do |form|
          div class="grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2 flex-1"
            div class="sm:col-span-2"
              = form.label :name, "Name"
              = form.text_field :name, data: { controller: 'food', action: "change->food#validate" }, placeholder: "Enter food name", class: "block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-insetfocus:ring-indigo-600 sm:text-sm sm:leading"
              - if food.errors&.messages&.dig(:name).present?
                div class="px-3 text-rose-600"
                  = "#{food.errors&.messages&.dig(:name)&.join('')}."
            div class="sm:col-span-2"
              = form.label :ingredients, "Ingredients"
              = render 'ingredients_multiple_select', food: food
          div class="grid grid-cols-1 gap-x-8 gap-y-6 sm:grid-cols-2 flex-1"
            div class="sm:col-span-2"
              = form.label :ingredients_count, "Ingredients Count"
              = render 'ingredients', food_ingredients: food.food_ingredients
          div class="flex lg:justify-end gap-x-0.5 mt-3 w-full"
            = form.submit  class: "w-[150px] block rounded-md bg-indigo-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
            button data-controller="food" data-action="click->food#cancle" class="w-[110px] block rounded-md bg-rose-600 px-3.5 py-2.5 text-center text-sm font-semibold text-white shadow-sm hover:bg-rose-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:bg-rose-500" Cancel

javascript:
  var controller = document.getElementById('food-ingredients-controller');
  var select = document.getElementById('food_ingredients');
  var ingredientsCount = document.getElementById('food-ingredients-count');
  controller.addEventListener('multiselect-change', function () {
    console.log('multiselect-change', select.values)
    var ingredientCounter = document.getElementById('food-ingredients-count');
    for (let i = 0; i < ingredientCounter.children.length; i++) {
      var item = ingredientCounter.children[i];
      console.log('item', item)
      if ( document.getElementById('food_ingredients').values.includes(item.dataset.id) ) {
        console.log('includes', item)
        item.classList.remove('hidden');
      } else {
        item.classList.add('hidden');
      }
    }
  });
